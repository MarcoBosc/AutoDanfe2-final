package AutoDanfeCancelamentoNota;

import com.sun.jdi.connect.spi.Connection;
import java.awt.BorderLayout;
import java.awt.Color;
import java.beans.Statement;
import javax.swing.JOptionPane;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import java.sql.SQLException;
import java.sql.DriverManager;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionListener;
import java.text.DecimalFormat;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import java.awt.event.ActionEvent;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.SwingConstants;
import java.util.List;
import java.util.ArrayList;


public class CancelamentoNota extends javax.swing.JInternalFrame {

    public CancelamentoNota() {
        initComponents();
        popular_tabela();

        tfNumeroNota.setForeground(Color.GRAY);

        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bui = (BasicInternalFrameUI) this.getUI();
        bui.setNorthPane(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfNumeroNota = new test.RoundedTextField();
        jLabel2 = new javax.swing.JLabel();
        btnCancelar = new Components.btnRounded();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbNotas = new Components.table();
        btnVisualizar = new Components.btnRounded();

        setMinimumSize(new java.awt.Dimension(1000, 596));

        jPanel1.setBackground(new java.awt.Color(223, 223, 223));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Waree", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("Cancelar Nota Fiscal");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        tfNumeroNota.setText("045.892.312");
        tfNumeroNota.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tfNumeroNotaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfNumeroNotaFocusLost(evt);
            }
        });
        tfNumeroNota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNumeroNotaActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Liberation Sans", 0, 15)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("NÃºmero da nota:");

        btnCancelar.setBackground(new java.awt.Color(153, 0, 0));
        btnCancelar.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/cancelarLogo.png"))); // NOI18N
        btnCancelar.setText("Cancelar Nf-e");
        btnCancelar.setBorderColor(new java.awt.Color(153, 0, 0));
        btnCancelar.setColor(new java.awt.Color(153, 0, 0));
        btnCancelar.setColorClick(new java.awt.Color(124, 0, 0));
        btnCancelar.setColorOver(new java.awt.Color(143, 0, 0));
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        tbNotas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tbNotas);

        btnVisualizar.setBackground(new java.awt.Color(153, 153, 153));
        btnVisualizar.setForeground(new java.awt.Color(0, 0, 0));
        btnVisualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/visualizarLogo.png"))); // NOI18N
        btnVisualizar.setText("Visualizar");
        btnVisualizar.setBorderColor(new java.awt.Color(153, 153, 153));
        btnVisualizar.setColor(new java.awt.Color(153, 153, 153));
        btnVisualizar.setColorClick(new java.awt.Color(140, 140, 140));
        btnVisualizar.setColorOver(new java.awt.Color(148, 148, 148));
        btnVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(325, 325, 325)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(tfNumeroNota, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnVisualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(302, 302, 302))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 905, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfNumeroNota, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnVisualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(38, 38, 38))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfNumeroNotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNumeroNotaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNumeroNotaActionPerformed

    private void tfNumeroNotaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfNumeroNotaFocusGained
        tfNumeroNota.setText("");
        tfNumeroNota.setForeground(Color.BLACK);
    }//GEN-LAST:event_tfNumeroNotaFocusGained

    private void tfNumeroNotaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfNumeroNotaFocusLost
        if (tfNumeroNota.getText() == "") {
            tfNumeroNota.setText("045.892.312");
            tfNumeroNota.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_tfNumeroNotaFocusLost

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisualizarActionPerformed
        btnVisualizar.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                int selectedRow = tbNotas.getSelectedRow();
                if (selectedRow >= 0) {
                    int idDanfe = (int) tbNotas.getValueAt(selectedRow, 0);
                    String numNota = (String) tbNotas.getValueAt(selectedRow, 2);
                    showNoteDetails(idDanfe);
                } else {
                    JOptionPane.showMessageDialog(null, "Selecione uma nota da tabela para visualizar os detalhes.", "Aviso", JOptionPane.WARNING_MESSAGE);
                }
            }
        });
    }//GEN-LAST:event_btnVisualizarActionPerformed

    private void showNoteDetails(int idDanfe) {
        try {
            // Criando uma conexÃ£o com o banco de dados
            String url = "jdbc:postgresql://localhost:5432/AutoDanfe2";
            java.sql.Connection conn = DriverManager.getConnection(url, "postgres", "admin");

            // Criando a consulta SQL para obter os detalhes da nota e as parcelas
            String sql = "SELECT d.num_nota, p.num_pedido, pr.nome_produto, ip.qtd_produto, ip.valor_produto, ip.total_produto, c.razao_social_cliente, t.razao_social_transp, p.total_pedido, parc.data_parcela "
                    + "FROM danfe AS d "
                    + "JOIN pedidos AS p ON d.id_pedido = p.id_pedido "
                    + "JOIN itens_pedido AS ip ON p.id_pedido = ip.id_pedido "
                    + "JOIN produtos AS pr ON ip.id_produto = pr.id_produto "
                    + "JOIN clientes AS c ON d.id_cliente = c.id_cliente "
                    + "LEFT JOIN transportadoras AS t ON d.id_transportadora = t.id_transportadora "
                    + "LEFT JOIN parcelas AS parc ON parc.id_pedido = p.id_pedido "
                    + "WHERE d.id_danfe = " + idDanfe;

            // Criando o objeto Statement com um conjunto de resultados rolÃ¡vel
            java.sql.Statement stmt = conn.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);

            // Executando a consulta SQL e obtendo o resultado
            ResultSet rs = stmt.executeQuery(sql);

            // Obtendo as informaÃ§Ãµes da nota
            String numNota = null;
            String numPedido = null;
            String razaoSocialCliente = null;
            String razaoSocialTransportadora = null;
            double valorTotalNota = 0.0;

            // Iterando atravÃ©s do resultado e obtendo os valores da nota
            while (rs.next()) {
                if (numNota == null) {
                    numNota = rs.getString("num_nota");
                    numPedido = rs.getString("num_pedido");
                    razaoSocialCliente = rs.getString("razao_social_cliente");
                    razaoSocialTransportadora = rs.getString("razao_social_transp");
                }
                double totalProduto = rs.getDouble("total_produto");
                valorTotalNota += totalProduto;
            }

            List<String> parcelas = new ArrayList<>();

// Iterando atravÃ©s do resultado e obtendo os valores da nota
            while (rs.next()) {
                //...
                String dataParcela = rs.getString("data_parcela");
                if (dataParcela != null && !parcelas.contains(dataParcela)) {
                    parcelas.add(dataParcela);
                }
                //...
            }
            int lenParcelas = parcelas.size();
            // Voltando para a primeira linha do conjunto de resultados
            rs.beforeFirst();

            // Construindo os painÃ©is com as informaÃ§Ãµes da nota e as tabelas
            JPanel panel = new JPanel();
            panel.setLayout(new BorderLayout());

            // TÃ­tulo
            JLabel titleLabel = new JLabel("VisualizaÃ§Ã£o de Danfe");
            titleLabel.setFont(titleLabel.getFont().deriveFont(Font.BOLD, 16f));
            titleLabel.setHorizontalAlignment(SwingConstants.CENTER);
            panel.add(titleLabel, BorderLayout.NORTH);

            // Construindo a tabela de produtos
            DefaultTableModel tableModelProducts = new DefaultTableModel(new Object[]{"Nome Produto", "Qtd Produto", "Valor Produto", "Total Produto"}, 0);

            // Construindo a tabela de parcelas
            DefaultTableModel tableModelParcelas = new DefaultTableModel(new Object[]{"Parcela", "Valor"}, 0);

            // Iterando atravÃ©s do resultado novamente para preencher as tabelas
            while (rs.next()) {
                String nomeProduto = rs.getString("nome_produto");
                int qtdProduto = rs.getInt("qtd_produto");
                double valorProduto = rs.getDouble("valor_produto");
                double totalProduto = rs.getDouble("total_produto");
                tableModelProducts.addRow(new Object[]{nomeProduto, qtdProduto, String.format("%.2f", valorProduto), String.format("%.2f", totalProduto)});

                String dataParcela = rs.getString("data_parcela");
                System.out.println(lenParcelas);
                double valorParcela = valorTotalNota / lenParcelas;
                tableModelParcelas.addRow(new Object[]{dataParcela, String.format("%.2f", valorParcela)});

            }

            // Tabela de produtos
            JTable productsTable = new JTable(tableModelProducts);
            JScrollPane scrollPaneProducts = new JScrollPane(productsTable);
            scrollPaneProducts.setPreferredSize(new Dimension(scrollPaneProducts.getPreferredSize().width, Math.max(100, Math.min(300, productsTable.getRowHeight() * tableModelProducts.getRowCount()))));

            // InformaÃ§Ãµes da nota
            JPanel infoPanel = new JPanel(new GridLayout(5, 2));
            infoPanel.add(new JLabel("<html><b>Num Nota:</b></html>"));
            infoPanel.add(new JLabel("<html><font size='5'>" + numNota + "</font></html>"));
            infoPanel.add(new JLabel("<html><b>Num Pedido:</b></html>"));
            infoPanel.add(new JLabel("<html><font size='5'>" + numPedido + "</font></html>"));
            infoPanel.add(new JLabel("<html><b>RazÃ£o Social Cliente:</b></html>"));
            infoPanel.add(new JLabel("<html><font size='5'>" + razaoSocialCliente + "</font></html>"));
            infoPanel.add(new JLabel("<html><b>RazÃ£o Social Transportadora:</b></html>"));
            infoPanel.add(new JLabel("<html><font size='5'>" + razaoSocialTransportadora + "</font></html>"));
            infoPanel.add(new JLabel("<html><b>Valor Total Nota:</b></html>"));
            infoPanel.add(new JLabel("<html><font size='5'>" + String.format("%.2f", valorTotalNota) + "</font></html>"));

            // Tabela de parcelas
            JTable parcelasTable = new JTable(tableModelParcelas);
            JScrollPane scrollPaneParcelas = new JScrollPane(parcelasTable);
            scrollPaneParcelas.setPreferredSize(new Dimension(scrollPaneParcelas.getPreferredSize().width, Math.max(100, parcelasTable.getRowHeight() * tableModelParcelas.getRowCount())));

            // Adicionando os painÃ©is no painel principal
            panel.add(infoPanel, BorderLayout.NORTH);
            panel.add(scrollPaneProducts, BorderLayout.CENTER);
            panel.add(scrollPaneParcelas, BorderLayout.SOUTH);

            // Exibindo a mensagem de detalhes da nota com as informaÃ§Ãµes e as tabelas
            JOptionPane.showMessageDialog(null, panel, "Detalhes da Nota", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao obter os detalhes da nota. " + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void popular_tabela() {
        try {
            // Criando uma conexÃ£o com o banco de dados
            String url = "jdbc:postgresql://localhost:5432/AutoDanfe2";
            java.sql.Connection conn = DriverManager.getConnection(url, "postgres", "admin");

            // Criando a consulta SQL
            String sql = "SELECT d.id_danfe, c.razao_social_cliente, p.num_pedido, t.razao_social_transp, d.data_emissao, p.total_pedido, d.num_nota "
                    + "FROM danfe d "
                    + "JOIN pedidos p ON d.id_pedido = p.id_pedido "
                    + "JOIN clientes c ON d.id_cliente = c.id_cliente "
                    + "LEFT JOIN transportadoras t ON d.id_transportadora = t.id_transportadora";

            // Criando o objeto Statement
            java.sql.Statement stmt = conn.createStatement();

            // Executando a consulta SQL e obtendo o resultado
            ResultSet rs = stmt.executeQuery(sql);

            // Obtendo o modelo da tabela
            DefaultTableModel model = (DefaultTableModel) tbNotas.getModel();

            // Limpar os dados existentes na tabela e definir as colunas
            model.setRowCount(0);
            model.setColumnIdentifiers(new Object[]{"ID Danfe", "Cliente", "Num Pedido", "Transportadora", "Data EmissÃ£o", "Valor Total", "Num Nota"});

            // Definir um DefaultTableCellRenderer personalizado para personalizar a renderizaÃ§Ã£o dos itens da tabela
            DefaultTableCellRenderer centerRenderer = new DefaultTableCellRenderer();
            centerRenderer.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);

            // Aplicar o renderizador personalizado em todas as colunas da tabela
            for (int i = 0; i < tbNotas.getColumnCount(); i++) {
                tbNotas.getColumnModel().getColumn(i).setCellRenderer(centerRenderer);
            }

            // Definir a cor do texto das cÃ©lulas para preto
            centerRenderer.setForeground(Color.BLACK);

            // Iterando atravÃ©s do resultado e adicionando os dados na tabela
            DecimalFormat decimalFormat = new DecimalFormat("0.00"); // Format for two decimal places
            while (rs.next()) {
                double valorTotal = rs.getDouble(6);
                String valorTotalFormatted = decimalFormat.format(valorTotal);
                model.addRow(new Object[]{rs.getInt(1), rs.getString(2), rs.getString(3), rs.getString(4), rs.getDate(5), valorTotalFormatted, rs.getString(7)});
            }

            // Fechando a conexÃ£o
            conn.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Erro ao popular a tabela. " + ex.getMessage());
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Components.btnRounded btnCancelar;
    private Components.btnRounded btnVisualizar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private Components.table tbNotas;
    private test.RoundedTextField tfNumeroNota;
    // End of variables declaration//GEN-END:variables
}
